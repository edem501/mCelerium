@model iCelerium.Models.EditAccountViewModel

@{
    ViewBag.Title = Html.DisplayFor(model=>model.FullName);
}

<h3><i class="fa fa-user"></i>Editing  @ViewBag.Title</h3>
<hr/>
@using (Html.BeginForm())
        {
    @Html.AntiForgeryToken()

<div class="row">
    <div class="col-md-5">
        <h3>Biometry</h3>
            <div class="form-horizontal">
                <hr />
                @Html.ValidationSummary(true)
                @Html.HiddenFor(model => model.Id)
                <div class="form-group">
                    @Html.LabelFor(model => model.FullName, new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.TextBoxFor(model => model.FullName, new { @class = "form-control", @readonly = true })
                        @Html.ValidationMessageFor(model => model.FullName)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.UserName, new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.TextBoxFor(model => model.UserName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.UserName)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Email, new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Email)
                    </div>
                </div>

            </div>

    </div>
    <div class="col-md-4">
        <h3>Electoral</h3>
        <hr />
        <div class="form-group">

            <div class="col-md-12">

                @Html.DropDownList("RegionID", new SelectList(ViewBag.itemRegions, "Value", "Text"), "Regions", new { @class = "form-control dropdown" })

            </div>
        </div>
        <div class="form-group">

            <div class="col-md-12">
                @*@Html.DropDownList("DistrictID", new SelectList(ViewBag.itemConstituencies,"Value","Text"), "Constituencies", new { @class = "form-control dropdown" })*@
                @Html.DropDownListFor(model => model.ContituencyID, new SelectList(ViewBag.itemConstituencies, "Value", "Text"), new { @class = "form-control dropdown" })
            </div>
        </div>
        <div class="form-group">

            <div class="col-md-12">
                @*@Html.DropDownList("DistrictID", new SelectList(ViewBag.itemConstituencies,"Value","Text"), "Constituencies", new { @class = "form-control dropdown" })*@
                @Html.DropDownListFor(model => model.PollingStationID, new SelectList(ViewBag.itemPolling, "Value", "Text"), new { @class = "form-control dropdown" })
           @Html.ValidationMessageFor(model => model.PollingStationID)
             </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.IsEnable, new { @class = "control-label col-md-4" })
            <div class="col-md-8">

                @Html.CheckBoxFor(model => model.IsEnable, new { @class = "form-control", @checked = "Id" })
                @Html.ValidationMessageFor(model => model.IsEnable)
            </div>
        </div>
    </div>
        <div class="col-md-3">
            <h3>Roles</h3>
            <hr />
            @foreach (var item in ViewBag.AppRoles)
        {

                @Html.CheckBox((string)item.Text, (bool)item.Selected, new {@class="iRoles" })@Html.Label((string)item.Text)<br />
        }
        </div>

    </div>
    <div class="row" style="text-align:right;">
        <div class="form-group">
            <div class="col-md-12 ">
               
                        <input type="submit" value=@iCelerium.Views.Strings.Save class="btn btn-success" />
                        @Html.ActionLink(@iCelerium.Views.Strings.ResetPassword, "ResetPassword", new { usrID = Model.Id }, new { @class = "btn btn-danger" })
                        @Html.ActionLink(@iCelerium.Views.Strings.Cancel, "AccountsList", new { }, new { @class = "btn btn-default" })
                   
              
                </div>
        </div>

    </div>
        }


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script type="text/javascript">
    $(document).ready(function () {
        $("#RegionID").change(function () {
            var rID = $(this).val();
            
            $.getJSON('@Url.Action("LoadContituencyByRegion", "Account")', {RegionID:rID},ReceveResponse);
             
        });
        function ReceveResponse(response) {
            if (response != null) {
             
                var select = $("#ContituencyID");
                select.empty();
                select.append($('<option/>', {
                    value: 0,
                    text: "Constituencies"
                }));
                $.each(response, function (index, itemData) {
                    select.append($('<option/>', {
                        value: itemData.Value,
                        text: itemData.Text
                    }));
                });
            }
        }


        $("#ContituencyID").change(function () {
            var cID = $(this).val();

            $.getJSON('@Url.Action("LoadPollingByConstituency", "Account")', { ConstituencyID: cID }, ReceveResponse1);

        });
        function ReceveResponse1(response) {
            if (response != null) {

                var select = $("#PollingStationID");
                select.empty();
                select.append($('<option/>', {
                    value: 0,
                    text: "PollingStations"
                }));
                $.each(response, function (index, itemData) {
                    select.append($('<option/>', {
                        value: itemData.Value,
                        text: itemData.Text
                    }));
                });
            }
        }

    });

    
</script>

}
