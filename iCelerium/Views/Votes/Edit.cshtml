@model iCelerium.Models.BodyClasses.VoteCollationModelView

@{
    ViewBag.Title = "Data Collations";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h3><i class="fa fa-user"></i>@ViewBag.Title</h3>
<hr />
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="row">
      

            <div class="form-horizontal">

                @Html.ValidationSummary(true)
                <div class="col-md-4">
                    <div class="form-group">
                        <div class="col-md-8">
                            @Html.DropDownList("ConstituencyID", new SelectList(ViewBag.itemConstituencies, "Value", "Text"), "Constituencies", new { @class = "form-control dropdown col-md-offset-7" })
                            @Html.ValidationMessageFor(model => model.ConstituencyID)
                        </div>
                    </div>
                    <div class="form-group">

                        <div class="col-md-8">
                            @*@Html.DropDownList("DistrictID", new SelectList(ViewBag.itemConstituencies,"Value","Text"), "Constituencies", new { @class = "form-control dropdown" })*@
                            @Html.DropDownList("PollingStationID", new SelectList(ViewBag.itemPolling, "Value", "Text"), "Polling Stations",new { @class = "form-control dropdown col-md-offset-7" })
                            @Html.ValidationMessageFor(model => model.PollingStationID)
                        </div>
                    </div>

                </div>
                <div class="col-md-4">
                    <div class="form-group ">
                        @Html.LabelFor(model => model.NDC, new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.TextBoxFor(model => model.NDC, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.NDC)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.NPP, new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.TextBoxFor(model => model.NPP, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.NPP)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.CPP, new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.TextBoxFor(model => model.CPP, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CPP)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.PPP, new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.TextBoxFor(model => model.PPP, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.PPP)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.OTHERS, new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.TextBoxFor(model => model.OTHERS, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.OTHERS)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.REJECTED, new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.TextBoxFor(model => model.REJECTED, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.REJECTED)
                        </div>
                    </div>
                </div>
                <div class="col-md-4"></div>

            </div>

    </div>
    <div class="row">
        <div class="form-group">
            <div class="col-md-4"></div>
             <div class="col-md-4" style="text-align:right;">
                <input type="submit" value=@iCelerium.Views.Strings.Save class="btn btn-success" />
                @Html.ActionLink(@iCelerium.Views.Strings.Cancel, "Index", new { }, new { @class = "btn btn-default" })
             </div>
            <div class="col-md-4"></div>
        </div>

    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script type="text/javascript">
    $(document).ready(function () {
        $("#RegionID").change(function () {
            var rID = $(this).val();

            $.getJSON('@Url.Action("LoadContituencyByRegion", "Account")', {RegionID:rID},ReceveResponse);

        });
        function ReceveResponse(response) {
            if (response != null) {

                var select = $("#ContituencyID");
                select.empty();
                select.append($('<option/>', {
                    value: 0,
                    text: "Constituencies"
                }));
                $.each(response, function (index, itemData) {
                    select.append($('<option/>', {
                        value: itemData.Value,
                        text: itemData.Text
                    }));
                });
            }
        }


        $("#ConstituencyID").change(function () {
            var cID = $(this).val();
           
            $.getJSON('@Url.Action("LoadPollingByConstituency", "Votes")', { ConstituencyID: cID }, ReceveResponse1);

        });
        function ReceveResponse1(response) {
            if (response != null) {

                var select = $("#PollingStationID");
                select.empty();
                select.append($('<option/>', {
                    value: 0,
                    text: "PollingStations"
                }));
                $.each(response, function (index, itemData) {
                    select.append($('<option/>', {
                        value: itemData.Value,
                        text: itemData.Text
                    }));
                });
            }
        }

    });


</script>
}


